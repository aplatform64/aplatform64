#!/bin/sh
#
# Project development environment variables
#
# * Use along with .local and .secrets
# * Template version: 2.1.1
#

# Base file and directory names for building paths
DEV_NAME_BUILD='build'
export DEV_NAME_BUILD
DEV_NAME_TEST='test'
export DEV_NAME_TEST
DEV_NAME_SRC='src'
export DEV_NAME_SRC

# Base path for builds
DEV_BUILD="${DEV_ROOT}/${DEV_NAME_BUILD}"
export DEV_BUILD

# Source files
DEV_SRC="${DEV_ROOT}/${DEV_NAME_SRC}"
export DEV_SRC

# Test files
DEV_TEST="${DEV_ROOT}/${DEV_NAME_TEST}"
export DEV_TEST

# Dev/Test scripts
DEV_BIN="${DEV_ROOT}/bin"
export DEV_BIN

# Dev/Test libs
DEV_LIB="${DEV_ROOT}/lib"
export DEV_LIB

# Base path for documentation
DEV_DOCS="${DEV_ROOT}/docs"
export DEV_DOCS

# Temporary data location
DEV_TMP="${DEV_ROOT}/.tmp"
export DEV_TMP

# Variable data location
DEV_VAR="${DEV_ROOT}/.var"
export DEV_VAR

# CICD / Tools full paths
DEV_CICD_BUILD="${DEV_BIN}/dev-build"
export DEV_CICD_BUILD
DEV_CICD_LINT="${DEV_BIN}/dev-lint"
export DEV_CICD_LINT
DEV_CICD_TEST="${DEV_BIN}/dev-test"
export DEV_CICD_TEST
DEV_CICD_TESTMANSH="${DEV_LIB}/testmansh"
export DEV_CICD_TESTMANSH
DEV_CICD_BASHLIB64="${DEV_LIB}/bashlib64.bash"
export DEV_CICD_BASHLIB64
export DEV_CICD_BASHLIB64
DEV_CICD_TESTMANSH_REPO='https://raw.githubusercontent.com/automation64/testmansh/main/testmansh'
export DEV_CICD_BASHLIB64
DEV_CICD_BASHLIB64_REPO='https://raw.githubusercontent.com/automation64/bashlib64/main/bashlib64.bash'
export DEV_CICD_BASHLIB64_REPO

# Test / Container
DEV_TEST_CONTAINER_CLI_RHEL=''
DEV_TEST_CONTAINER_CLI_RHEL="${DEV_TEST_CONTAINER_CLI_RHEL} bash-test/rhel-8-bash-test"
export DEV_TEST_CONTAINER_CLI_RHEL
DEV_TEST_CONTAINER_CLI_CENTOS=''
DEV_TEST_CONTAINER_CLI_CENTOS="${DEV_TEST_CONTAINER_CLI_CENTOS} bash-test/almalinux-8-bash-test"
# EOL # DEV_TEST_CONTAINER_CLI_CENTOS="${DEV_TEST_CONTAINER_CLI_CENTOS} bash-test/centos-8-bash-test"
DEV_TEST_CONTAINER_CLI_CENTOS="${DEV_TEST_CONTAINER_CLI_CENTOS} bash-test/oraclelinux-8-bash-test"
DEV_TEST_CONTAINER_CLI_CENTOS="${DEV_TEST_CONTAINER_CLI_CENTOS} bash-test/oraclelinux-9-bash-test"
DEV_TEST_CONTAINER_CLI_CENTOS="${DEV_TEST_CONTAINER_CLI_CENTOS} bash-test/rockylinux-8-bash-test"
export DEV_TEST_CONTAINER_CLI_CENTOS
DEV_TEST_CONTAINER_CLI_FEDORA=''
DEV_TEST_CONTAINER_CLI_FEDORA="${DEV_TEST_CONTAINER_CLI_FEDORA} bash-test/fedora-33-bash-test"
DEV_TEST_CONTAINER_CLI_FEDORA="${DEV_TEST_CONTAINER_CLI_FEDORA} bash-test/fedora-35-bash-test"
export DEV_TEST_CONTAINER_CLI_FEDORA
DEV_TEST_CONTAINER_CLI_DEBIAN=''
DEV_TEST_CONTAINER_CLI_DEBIAN="${DEV_TEST_CONTAINER_CLI_DEBIAN} bash-test/debian-10-bash-test"
DEV_TEST_CONTAINER_CLI_DEBIAN="${DEV_TEST_CONTAINER_CLI_DEBIAN} bash-test/debian-11-bash-test"
export DEV_TEST_CONTAINER_CLI_DEBIAN
DEV_TEST_CONTAINER_CLI_UBUNTU=''
DEV_TEST_CONTAINER_CLI_UBUNTU="${DEV_TEST_CONTAINER_CLI_UBUNTU} bash-test/ubuntu-20.4-bash-test"
DEV_TEST_CONTAINER_CLI_UBUNTU="${DEV_TEST_CONTAINER_CLI_UBUNTU} bash-test/ubuntu-21.4-bash-test"
DEV_TEST_CONTAINER_CLI_UBUNTU="${DEV_TEST_CONTAINER_CLI_UBUNTU} bash-test/ubuntu-22.4-bash-test"
export DEV_TEST_CONTAINER_CLI_UBUNTU
DEV_TEST_CONTAINER_ROLE_RHEL=''
DEV_TEST_CONTAINER_ROLE_RHEL="${DEV_TEST_CONTAINER_ROLE_RHEL} ansible-test/rhel-8-ansible-test"
export DEV_TEST_CONTAINER_ROLE_RHEL
DEV_TEST_CONTAINER_ROLE_CENTOS=''
DEV_TEST_CONTAINER_ROLE_CENTOS="${DEV_TEST_CONTAINER_ROLE_CENTOS} ansible-test/almalinux-8-ansible-test"
# EOL # DEV_TEST_CONTAINER_ROLE_CENTOS="${DEV_TEST_CONTAINER_ROLE_CENTOS} ansible-test/centos-8-ansible-test"
DEV_TEST_CONTAINER_ROLE_CENTOS="${DEV_TEST_CONTAINER_ROLE_CENTOS} ansible-test/oraclelinux-8-ansible-test"
DEV_TEST_CONTAINER_ROLE_CENTOS="${DEV_TEST_CONTAINER_ROLE_CENTOS} ansible-test/oraclelinux-9-ansible-test"
DEV_TEST_CONTAINER_ROLE_CENTOS="${DEV_TEST_CONTAINER_ROLE_CENTOS} ansible-test/rockylinux-8-ansible-test"
export DEV_TEST_CONTAINER_ROLE_CENTOS
DEV_TEST_CONTAINER_ROLE_FEDORA=''
DEV_TEST_CONTAINER_ROLE_FEDORA="${DEV_TEST_CONTAINER_ROLE_FEDORA} ansible-test/fedora-33-ansible-test"
DEV_TEST_CONTAINER_ROLE_FEDORA="${DEV_TEST_CONTAINER_ROLE_FEDORA} ansible-test/fedora-35-ansible-test"
DEV_TEST_CONTAINER_ROLE_FEDORA="${DEV_TEST_CONTAINER_ROLE_FEDORA} ansible-test/fedora-36-ansible-test"
export DEV_TEST_CONTAINER_ROLE_FEDORA
DEV_TEST_CONTAINER_ROLE_DEBIAN=''
DEV_TEST_CONTAINER_ROLE_DEBIAN="${DEV_TEST_CONTAINER_ROLE_DEBIAN} ansible-test/debian-10-ansible-test"
DEV_TEST_CONTAINER_ROLE_DEBIAN="${DEV_TEST_CONTAINER_ROLE_DEBIAN} ansible-test/debian-11-ansible-test"
export DEV_TEST_CONTAINER_ROLE_DEBIAN
DEV_TEST_CONTAINER_ROLE_UBUNTU=''
DEV_TEST_CONTAINER_ROLE_UBUNTU="${DEV_TEST_CONTAINER_ROLE_UBUNTU} ansible-test/ubuntu-20.4-ansible-test"
DEV_TEST_CONTAINER_ROLE_UBUNTU="${DEV_TEST_CONTAINER_ROLE_UBUNTU} ansible-test/ubuntu-21.4-ansible-test"
DEV_TEST_CONTAINER_ROLE_UBUNTU="${DEV_TEST_CONTAINER_ROLE_UBUNTU} ansible-test/ubuntu-22.4-ansible-test"
export DEV_TEST_CONTAINER_ROLE_UBUNTU
DEV_TEST_CONTAINER_ANSIBLE="${DEV_TEST_CONTAINER_ANSIBLE} ansible-test/ubuntu-22.4-ansible-test-2.11"
DEV_TEST_CONTAINER_ANSIBLE="${DEV_TEST_CONTAINER_ANSIBLE} ansible-test/ubuntu-22.4-ansible-test-2.12"
DEV_TEST_CONTAINER_ANSIBLE="${DEV_TEST_CONTAINER_ANSIBLE} ansible-test/ubuntu-22.4-ansible-test-2.13"
DEV_TEST_CONTAINER_ANSIBLE="${DEV_TEST_CONTAINER_ANSIBLE} ansible-test/ubuntu-22.4-ansible-test-2.14"
DEV_TEST_CONTAINER_ANSIBLE="${DEV_TEST_CONTAINER_ANSIBLE} ansible-test/ubuntu-22.4-ansible-test-2.15"
export DEV_TEST_CONTAINER_ANSIBLE

# Build / Target file name
DEV_BUILD_NAME='ap64'
export DEV_BUILD_NAME

# Build / Target full path
DEV_BUILD_FULL_PATH="${DEV_BUILD}/${DEV_BUILD_NAME}"
export DEV_BUILD_FULL_PATH

#
# Project specific variables
#

# Ansible-Lint / Command
DEV_CMD_ANSIBLELINT="ansible-lint"
export DEV_CMD_ANSIBLELINT

# Ansible-Lint / Configuration
DEV_CFG_ANSIBLE_LINT="${DEV_ROOT}/.ansible-lint"
export DEV_CFG_ANSIBLE_LINT

# YAML-Lint / Command
DEV_CMD_YAMLLINT="yamllint"
export DEV_CMD_YAMLLINT

# YAML-Lint / Configuration
DEV_CFG_YAML_LINT="${DEV_ROOT}/.yamllint"
export DEV_CFG_YAML_LINT

DEV_CFG_ANSIBLE="${DEV_ROOT}/.ansible.cfg"
export DEV_CFG_ANSIBLE

# Build / Prod
DEV_BUILD_PROD="${DEV_BUILD}/prod"
export DEV_BUILD_PROD

# Build / Dev
DEV_BUILD_DEV="${DEV_BUILD}/dev"
export DEV_BUILD_DEV

# Ansible / SerDigital64 collections
DEV_SRC_COLLECTIONS="${DEV_ROOT}/collections/serdigital64"
export DEV_SRC_COLLECTIONS

# Ansible / Persistent data
DEV_VAR_ANSIBLE="${DEV_VAR}/ansible"
export DEV_VAR_ANSIBLE

# Ansible Test / collections
DEV_VAR_COLLECTIONS="${DEV_VAR_ANSIBLE}/collections"
export DEV_VAR_COLLECTIONS

# Ansible Test / roles
DEV_VAR_ROLES="${DEV_VAR_ANSIBLE}/roles"
export DEV_VAR_ROLES

# Ansible / Temporary data
DEV_TMP_ANSIBLE="${DEV_TMP}/ansible"
export DEV_TMP_ANSIBLE

# Ansible / Cache data
DEV_CACHE_ANSIBLE="${DEV_VAR}/cache/ansible"
export DEV_CACHE_ANSIBLE

# Ansible Test / galaxy cache
DEV_CACHE_GALAXY="${DEV_VAR}/cache/galaxy"
export DEV_CACHE_GALAXY

# Ansible / SerDigital64 galaxy namespace
DEV_ANSIBLE_NAMESPACE='serdigital64'
export DEV_ANSIBLE_NAMESPACE

# APlatform64 collections
DEV_ANSIBLE_COLLECTIONS=''
DEV_ANSIBLE_COLLECTIONS="${DEV_ANSIBLE_COLLECTIONS} application"
DEV_ANSIBLE_COLLECTIONS="${DEV_ANSIBLE_COLLECTIONS} automation"
DEV_ANSIBLE_COLLECTIONS="${DEV_ANSIBLE_COLLECTIONS} backup"
DEV_ANSIBLE_COLLECTIONS="${DEV_ANSIBLE_COLLECTIONS} cloud"
DEV_ANSIBLE_COLLECTIONS="${DEV_ANSIBLE_COLLECTIONS} container"
DEV_ANSIBLE_COLLECTIONS="${DEV_ANSIBLE_COLLECTIONS} database"
DEV_ANSIBLE_COLLECTIONS="${DEV_ANSIBLE_COLLECTIONS} development"
DEV_ANSIBLE_COLLECTIONS="${DEV_ANSIBLE_COLLECTIONS} devops"
DEV_ANSIBLE_COLLECTIONS="${DEV_ANSIBLE_COLLECTIONS} hardware"
DEV_ANSIBLE_COLLECTIONS="${DEV_ANSIBLE_COLLECTIONS} hypervisor"
DEV_ANSIBLE_COLLECTIONS="${DEV_ANSIBLE_COLLECTIONS} infrastructure"
DEV_ANSIBLE_COLLECTIONS="${DEV_ANSIBLE_COLLECTIONS} monitor"
DEV_ANSIBLE_COLLECTIONS="${DEV_ANSIBLE_COLLECTIONS} network"
DEV_ANSIBLE_COLLECTIONS="${DEV_ANSIBLE_COLLECTIONS} security"
DEV_ANSIBLE_COLLECTIONS="${DEV_ANSIBLE_COLLECTIONS} storage"
DEV_ANSIBLE_COLLECTIONS="${DEV_ANSIBLE_COLLECTIONS} system"
DEV_ANSIBLE_COLLECTIONS="${DEV_ANSIBLE_COLLECTIONS} web"
export DEV_ANSIBLE_COLLECTIONS

DEV_REPO_UPSTREAM_COLLECTIONS='https://github.com/aplatform64'
export DEV_REPO_UPSTREAM_COLLECTIONS
