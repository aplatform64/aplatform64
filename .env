#!/usr/bin/env bash
#
# Development environmen / Variables
#
# * Automatically loaded by dev-set
# * Do not include local variables and secrets. Use .local and .secrets instead
# * Version: 3.1.1
#

# Main / Base file and directory names
export DEV_BASE_BUILD="build"
export DEV_BASE_TEST="test"
export DEV_BASE_SRC="src"
export DEV_BASE_DOT_LOCAL="dot.local"
export DEV_BASE_LOCAL=".local"
export DEV_BASE_DOT_SECRETS="dot.secrets"
export DEV_BASE_SECRETS=".secrets"
export DEV_BASE_ENV=".env"
export DEV_BASE_CHANGELOG="CHANGELOG.md"

# Main / Base path for builds
export DEV_PATH_BUILD="${DEV_PATH_ROOT}/${DEV_BASE_BUILD}"

# Main / Source files
export DEV_PATH_SRC="${DEV_PATH_ROOT}/${DEV_BASE_SRC}"

# Main / Test files
export DEV_PATH_TEST="${DEV_PATH_ROOT}/${DEV_BASE_TEST}"

# Main / DevOps scripts
export DEV_PATH_BIN="${DEV_PATH_ROOT}/bin"

# Main / DevOps libs
export DEV_PATH_LIB="${DEV_PATH_ROOT}/lib"

# Main / Project documentation
export DEV_PATH_DOCS="${DEV_PATH_ROOT}/docs"

# Main / DevOps ephemeral data content
export DEV_PATH_TMP="${DEV_PATH_ROOT}/tmp"

# Main / DevOps persistent data content
export DEV_PATH_VAR="${DEV_PATH_ROOT}/var"

#
# CICD Tools
#

# Lib / Installer64 / Repo Owner
export DEV_LIB_INSTALLER64_OWNER="automation64/installer64"
# Lib / Installer64 / Target
export DEV_LIB_INSTALLER64_TARGET="${DEV_PATH_LIB}/inst64"

# Lib / BashLib64 / Target
export DEV_LIB_BASHLIB64_TARGET="${DEV_PATH_LIB}/bl64"

# Build / Bash / Target file name
export DEV_BUILD_BASH_NAME='ap64'
# Build / Bash / Source full path
export DEV_BUILD_BASH_SOURCE="${DEV_PATH_SRC}/cli"
# Build / Bash / Libraries
export DEV_BUILD_BASH_MODULES=''
DEV_BUILD_BASH_MODULES+=" ${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-fmt.bash"
DEV_BUILD_BASH_MODULES+=" ${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-rnd.bash"
DEV_BUILD_BASH_MODULES+=" ${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-txt.bash"
DEV_BUILD_BASH_MODULES+=" ${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-ans.bash"
DEV_BUILD_BASH_MODULES+=" ${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-py.bash"
DEV_BUILD_BASH_MODULES+=" ${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-iam.bash"
DEV_BUILD_BASH_MODULES+=" ${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-fs.bash"
DEV_BUILD_BASH_MODULES+=" ${DEV_LIB_BASHLIB64_TARGET}/bashlib64-core.bash"

# Lint / TestmanSH / Sources
export DEV_LINT_TESTMANSH_SOURCE="${DEV_BASE_BUILD}/${DEV_BUILD_BASH_NAME}"
# Test / TestmanSH / Container
export DEV_TEST_TESTMANSH_CONTAINER_RHEL=''
DEV_TEST_TESTMANSH_CONTAINER_RHEL+=' bash-test/rhel-8-bash-test'
DEV_TEST_TESTMANSH_CONTAINER_RHEL+=' bash-test/almalinux-8-bash-test'
DEV_TEST_TESTMANSH_CONTAINER_RHEL+=' bash-test/centos-8-bash-test'
DEV_TEST_TESTMANSH_CONTAINER_RHEL+=' bash-test/oraclelinux-8-bash-test'
DEV_TEST_TESTMANSH_CONTAINER_RHEL+=' bash-test/oraclelinux-9-bash-test'
DEV_TEST_TESTMANSH_CONTAINER_RHEL+=' bash-test/rockylinux-8-bash-test'
export DEV_TEST_TESTMANSH_CONTAINER_FEDORA=''
DEV_TEST_TESTMANSH_CONTAINER_FEDORA+=' bash-test/fedora-33-bash-test'
DEV_TEST_TESTMANSH_CONTAINER_FEDORA+=' bash-test/fedora-35-bash-test'
export DEV_TEST_TESTMANSH_CONTAINER_DEBIAN=''
DEV_TEST_TESTMANSH_CONTAINER_DEBIAN+=' bash-test/debian-10-bash-test'
DEV_TEST_TESTMANSH_CONTAINER_DEBIAN+=' bash-test/debian-11-bash-test'
export DEV_TEST_TESTMANSH_CONTAINER_UBUNTU=''
DEV_TEST_TESTMANSH_CONTAINER_UBUNTU+=' bash-test/ubuntu-20.4-bash-test'
DEV_TEST_TESTMANSH_CONTAINER_UBUNTU+=' bash-test/ubuntu-21.4-bash-test'
DEV_TEST_TESTMANSH_CONTAINER_UBUNTU+=' bash-test/ubuntu-22.4-bash-test'
export DEV_TEST_TESTMANSH_CONTAINER='bash-test/rhel-8-bash-test'
# Test / TestmanSH / Cases
export DEV_TEST_TESTMANSH_CASES="${DEV_BASE_TEST}/batscore/cli"

# Build / Custom / Base path for collections
export DEV_BUILD_CUSTOM_BASE_COLLECTIONS="${DEV_PATH_ROOT}/collections/serdigital64"
# Build / Custom / Collection Catalog
export DEV_BUILD_CUSTOM_CATALOG_COLLECTIONS=''
DEV_BUILD_CUSTOM_CATALOG_COLLECTIONS+=' application'
DEV_BUILD_CUSTOM_CATALOG_COLLECTIONS+=' automation'
DEV_BUILD_CUSTOM_CATALOG_COLLECTIONS+=' backup'
DEV_BUILD_CUSTOM_CATALOG_COLLECTIONS+=' cloud'
DEV_BUILD_CUSTOM_CATALOG_COLLECTIONS+=' container'
DEV_BUILD_CUSTOM_CATALOG_COLLECTIONS+=' database'
DEV_BUILD_CUSTOM_CATALOG_COLLECTIONS+=' development'
DEV_BUILD_CUSTOM_CATALOG_COLLECTIONS+=' devops'
DEV_BUILD_CUSTOM_CATALOG_COLLECTIONS+=' hardware'
DEV_BUILD_CUSTOM_CATALOG_COLLECTIONS+=' hypervisor'
DEV_BUILD_CUSTOM_CATALOG_COLLECTIONS+=' infrastructure'
DEV_BUILD_CUSTOM_CATALOG_COLLECTIONS+=' monitor'
DEV_BUILD_CUSTOM_CATALOG_COLLECTIONS+=' network'
DEV_BUILD_CUSTOM_CATALOG_COLLECTIONS+=' security'
DEV_BUILD_CUSTOM_CATALOG_COLLECTIONS+=' storage'
DEV_BUILD_CUSTOM_CATALOG_COLLECTIONS+=' system'
DEV_BUILD_CUSTOM_CATALOG_COLLECTIONS+=' web'
# Build / Custom / Collection Catalog Versions
declare -A DEV_BUILD_CUSTOM_CATALOG_VERSIONS=''
DEV_BUILD_CUSTOM_CATALOG_VERSIONS[application]='2.1.5'
DEV_BUILD_CUSTOM_CATALOG_VERSIONS[automation]='3.2.6'
DEV_BUILD_CUSTOM_CATALOG_VERSIONS[backup]='2.1.5'
DEV_BUILD_CUSTOM_CATALOG_VERSIONS[cloud]='3.1.5'
DEV_BUILD_CUSTOM_CATALOG_VERSIONS[container]='2.1.5'
DEV_BUILD_CUSTOM_CATALOG_VERSIONS[database]='2.1.5'
DEV_BUILD_CUSTOM_CATALOG_VERSIONS[development]='2.1.6'
DEV_BUILD_CUSTOM_CATALOG_VERSIONS[devops]='2.1.6'
DEV_BUILD_CUSTOM_CATALOG_VERSIONS[hardware]='2.0.5'
DEV_BUILD_CUSTOM_CATALOG_VERSIONS[hypervisor]='2.1.7'
DEV_BUILD_CUSTOM_CATALOG_VERSIONS[infrastructure]='2.1.5'
DEV_BUILD_CUSTOM_CATALOG_VERSIONS[monitor]='2.1.5'
DEV_BUILD_CUSTOM_CATALOG_VERSIONS[network]='2.1.5'
DEV_BUILD_CUSTOM_CATALOG_VERSIONS[security]='2.1.6'
DEV_BUILD_CUSTOM_CATALOG_VERSIONS[storage]='2.1.5'
DEV_BUILD_CUSTOM_CATALOG_VERSIONS[system]='2.1.6'
DEV_BUILD_CUSTOM_CATALOG_VERSIONS[web]='2.1.5'
export _DEV_BUILD_CUSTOM_CATALOG_VERSIONS="$(declare -p DEV_BUILD_CUSTOM_CATALOG_VERSIONS)"

# Pack / Ansible / Ansible Galaxy Namespace
export DEV_PACK_ANSIBLE_GALAXY_NAMESPACE='serdigital64'
# Pack / Ansible / Base path for collections
export DEV_PACK_ANSIBLE_BASE_COLLECTIONS="$DEV_BUILD_CUSTOM_BASE_COLLECTIONS"
# Pack / Ansible / Collection Catalog
export DEV_PACK_ANSIBLE_CATALOG_COLLECTIONS=''

# Lint / YAML / Target
export DEV_LINT_YAMLLINT_TARGET="$DEV_BUILD_CUSTOM_BASE_COLLECTIONS"

# Lint / AnsibleLint / Base path for collections
export DEV_LINT_ANSIBLELINT_BASE_COLLECTIONS="$DEV_BUILD_CUSTOM_BASE_COLLECTIONS"
# Lint / AnsibleLint / Collection Catalog
export DEV_LINT_ANSIBLELINT_CATALOG_COLLECTIONS="$DEV_BUILD_CUSTOM_CATALOG_COLLECTIONS"

# Lab / Container / Default image
export DEV_LAB_CONTAINER_IMAGE='ansible-test/rhel-8-ansible-test'

#
# Project specific variables
#
