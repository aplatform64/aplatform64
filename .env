#!/usr/bin/env bash
#
# Development environmen / Variables
#
# * Automatically loaded by dev-set
# * Do not include local variables and secrets. Use .local and .secrets instead
# * Version: 3.1.0
#

# Main / Base file and directory names
export DEV_BASE_BUILD="build"
export DEV_BASE_TEST="test"
export DEV_BASE_SRC="src"
export DEV_BASE_DOT_LOCAL=dot.local
export DEV_BASE_LOCAL=.local
export DEV_BASE_DOT_SECRETS=dot.secrets
export DEV_BASE_SECRETS=.secrets
export DEV_BASE_ENV=.env
export DEV_BASE_CHANGELOG=CHANGELOG.md

# Main / Base path for builds
export DEV_PATH_BUILD="${DEV_PATH_ROOT}/${DEV_BASE_BUILD}"

# Main / Source files
export DEV_PATH_SRC="${DEV_PATH_ROOT}/${DEV_BASE_SRC}"

# Main / Test files
export DEV_PATH_TEST="${DEV_PATH_ROOT}/${DEV_BASE_TEST}"

# Main / DevOps scripts
export DEV_PATH_BIN="${DEV_PATH_ROOT}/bin"

# Main / DevOps libs
export DEV_PATH_LIB="${DEV_PATH_ROOT}/lib"

# Main / Project documentation
export DEV_PATH_DOCS="${DEV_PATH_ROOT}/docs"

# Main / DevOps ephemeral data content
export DEV_PATH_TMP="${DEV_PATH_ROOT}/tmp"

# Main / DevOps persistent data content
export DEV_PATH_VAR="${DEV_PATH_ROOT}/var"

#
# CICD Tools
#

# Lib / Installer64 / Repo Owner
export DEV_LIB_INSTALLER64_OWNER="automation64/installer64"

# Lib / Installer64 / Target
export DEV_LIB_INSTALLER64_TARGET="${DEV_PATH_LIB}/inst64"

# Lib / BashLib64 / Target
export DEV_LIB_BASHLIB64_TARGET="${DEV_PATH_LIB}/bl64"

# Build / Bash / Target file name
export DEV_BUILD_BASH_NAME='ap64'
# Build / Bash / Source full path
export DEV_BUILD_BASH_SOURCE="${DEV_PATH_SRC}/cli}"
# Build / Bash / Libraries
export DEV_BUILD_BASH_MODULES=''
DEV_BUILD_BASH_MODULES+="${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-fmt.bash"
DEV_BUILD_BASH_MODULES+="${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-rnd.bash"
DEV_BUILD_BASH_MODULES+="${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-txt.bash"
DEV_BUILD_BASH_MODULES+="${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-ans.bash"
DEV_BUILD_BASH_MODULES+="${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-py.bash"
DEV_BUILD_BASH_MODULES+="${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-iam.bash"
DEV_BUILD_BASH_MODULES+="${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-fs.bash"
DEV_BUILD_BASH_MODULES+="${DEV_LIB_BASHLIB64_TARGET}/bashlib64-core.bash"

#
# Project specific variables
#

# Lib / MkDocs / Target
DEV_CICD_LINT_MKDOCS_TARGET="${DEV_NAME_BUILD}/site"
export DEV_CICD_LINT_MKDOCS_TARGET

# Lint / MkDocs / Container
DEV_CICD_LINT_MKDOCS_CONTAINER='ghcr.io/automation64/ssg-lint/alpine-3-ssg-lint:latest'
export DEV_CICD_LINT_MKDOCS_CONTAINER

# Ansible-Lint / Configuration
DEV_CFG_ANSIBLE_LINT="${DEV_ROOT}/.ansible-lint"
export DEV_CFG_ANSIBLE_LINT

DEV_CFG_ANSIBLE="${DEV_ROOT}/.ansible.cfg"
export DEV_CFG_ANSIBLE

# Build / Prod
DEV_BUILD_PROD="${DEV_BUILD}/prod"
export DEV_BUILD_PROD

# Build / Dev
DEV_BUILD_DEV="${DEV_BUILD}/dev"
export DEV_BUILD_DEV

# Ansible / SerDigital64 collections
DEV_SRC_COLLECTIONS="${DEV_ROOT}/collections/serdigital64"
export DEV_SRC_COLLECTIONS
DEV_CICD_SUBREPO_ROOT="$DEV_SRC_COLLECTIONS"

# Ansible / Persistent data
DEV_VAR_ANSIBLE="${DEV_VAR}/ansible"
export DEV_VAR_ANSIBLE

# Ansible Test / collections
DEV_VAR_COLLECTIONS="${DEV_VAR_ANSIBLE}/collections"
export DEV_VAR_COLLECTIONS

# Ansible Test / roles
DEV_VAR_ROLES="${DEV_VAR_ANSIBLE}/roles"
export DEV_VAR_ROLES

# Ansible / Temporary data
DEV_TMP_ANSIBLE="${DEV_TMP}/ansible"
export DEV_TMP_ANSIBLE

# Ansible / Cache data
DEV_CACHE_ANSIBLE="${DEV_VAR}/cache/ansible"
export DEV_CACHE_ANSIBLE

# Ansible Test / galaxy cache
DEV_CACHE_GALAXY="${DEV_VAR}/cache/galaxy"
export DEV_CACHE_GALAXY

# Ansible / SerDigital64 galaxy namespace
DEV_AP64_NAMESPACE='serdigital64'
export DEV_AP64_NAMESPACE

# APlatform64 collections
DEV_AP64_COLLECTIONS=''
DEV_AP64_COLLECTIONS="${DEV_AP64_COLLECTIONS} application"
DEV_AP64_COLLECTIONS="${DEV_AP64_COLLECTIONS} automation"
DEV_AP64_COLLECTIONS="${DEV_AP64_COLLECTIONS} backup"
DEV_AP64_COLLECTIONS="${DEV_AP64_COLLECTIONS} cloud"
DEV_AP64_COLLECTIONS="${DEV_AP64_COLLECTIONS} container"
DEV_AP64_COLLECTIONS="${DEV_AP64_COLLECTIONS} database"
DEV_AP64_COLLECTIONS="${DEV_AP64_COLLECTIONS} development"
DEV_AP64_COLLECTIONS="${DEV_AP64_COLLECTIONS} devops"
DEV_AP64_COLLECTIONS="${DEV_AP64_COLLECTIONS} hardware"
DEV_AP64_COLLECTIONS="${DEV_AP64_COLLECTIONS} hypervisor"
DEV_AP64_COLLECTIONS="${DEV_AP64_COLLECTIONS} infrastructure"
DEV_AP64_COLLECTIONS="${DEV_AP64_COLLECTIONS} monitor"
DEV_AP64_COLLECTIONS="${DEV_AP64_COLLECTIONS} network"
DEV_AP64_COLLECTIONS="${DEV_AP64_COLLECTIONS} security"
DEV_AP64_COLLECTIONS="${DEV_AP64_COLLECTIONS} storage"
DEV_AP64_COLLECTIONS="${DEV_AP64_COLLECTIONS} system"
DEV_AP64_COLLECTIONS="${DEV_AP64_COLLECTIONS} web"
export DEV_AP64_COLLECTIONS
DEV_CICD_SUBREPO_LIST="$DEV_AP64_COLLECTIONS"

# APlatform64 collections
export DEV_AP64_COLLECTION_VERSION_APPLICATION='2.1.5'
export DEV_AP64_COLLECTION_VERSION_AUTOMATION='3.2.6'
export DEV_AP64_COLLECTION_VERSION_BACKUP='2.1.5'
export DEV_AP64_COLLECTION_VERSION_CLOUD='3.1.5'
export DEV_AP64_COLLECTION_VERSION_CONTAINER='2.1.5'
export DEV_AP64_COLLECTION_VERSION_DATABASE='2.1.5'
export DEV_AP64_COLLECTION_VERSION_DEVELOPMENT='2.1.6'
export DEV_AP64_COLLECTION_VERSION_DEVOPS='2.1.6'
export DEV_AP64_COLLECTION_VERSION_HARDWARE='2.0.5'
export DEV_AP64_COLLECTION_VERSION_HYPERVISOR='2.1.7'
export DEV_AP64_COLLECTION_VERSION_INFRASTRUCTURE='2.1.5'
export DEV_AP64_COLLECTION_VERSION_MONITOR='2.1.5'
export DEV_AP64_COLLECTION_VERSION_NETWORK='2.1.5'
export DEV_AP64_COLLECTION_VERSION_SECURITY='2.1.6'
export DEV_AP64_COLLECTION_VERSION_STORAGE='2.1.5'
export DEV_AP64_COLLECTION_VERSION_SYSTEM='2.1.6'
export DEV_AP64_COLLECTION_VERSION_WEB='2.1.5'

# Test containers
DEV_TEST_CONTAINER_ROLE_RHEL=''
DEV_TEST_CONTAINER_ROLE_RHEL="${DEV_TEST_CONTAINER_ROLE_RHEL} ansible-test/rhel-8-ansible-test"
export DEV_TEST_CONTAINER_ROLE_RHEL
DEV_TEST_CONTAINER_ROLE_CENTOS=''
DEV_TEST_CONTAINER_ROLE_CENTOS="${DEV_TEST_CONTAINER_ROLE_CENTOS} ansible-test/almalinux-8-ansible-test"
# EOL # DEV_TEST_CONTAINER_ROLE_CENTOS="${DEV_TEST_CONTAINER_ROLE_CENTOS} ansible-test/centos-8-ansible-test"
DEV_TEST_CONTAINER_ROLE_CENTOS="${DEV_TEST_CONTAINER_ROLE_CENTOS} ansible-test/oraclelinux-8-ansible-test"
DEV_TEST_CONTAINER_ROLE_CENTOS="${DEV_TEST_CONTAINER_ROLE_CENTOS} ansible-test/oraclelinux-9-ansible-test"
DEV_TEST_CONTAINER_ROLE_CENTOS="${DEV_TEST_CONTAINER_ROLE_CENTOS} ansible-test/rockylinux-8-ansible-test"
export DEV_TEST_CONTAINER_ROLE_CENTOS
DEV_TEST_CONTAINER_ROLE_FEDORA=''
DEV_TEST_CONTAINER_ROLE_FEDORA="${DEV_TEST_CONTAINER_ROLE_FEDORA} ansible-test/fedora-33-ansible-test"
DEV_TEST_CONTAINER_ROLE_FEDORA="${DEV_TEST_CONTAINER_ROLE_FEDORA} ansible-test/fedora-35-ansible-test"
DEV_TEST_CONTAINER_ROLE_FEDORA="${DEV_TEST_CONTAINER_ROLE_FEDORA} ansible-test/fedora-36-ansible-test"
export DEV_TEST_CONTAINER_ROLE_FEDORA
DEV_TEST_CONTAINER_ROLE_DEBIAN=''
DEV_TEST_CONTAINER_ROLE_DEBIAN="${DEV_TEST_CONTAINER_ROLE_DEBIAN} ansible-test/debian-10-ansible-test"
DEV_TEST_CONTAINER_ROLE_DEBIAN="${DEV_TEST_CONTAINER_ROLE_DEBIAN} ansible-test/debian-11-ansible-test"
export DEV_TEST_CONTAINER_ROLE_DEBIAN
DEV_TEST_CONTAINER_ROLE_UBUNTU=''
DEV_TEST_CONTAINER_ROLE_UBUNTU="${DEV_TEST_CONTAINER_ROLE_UBUNTU} ansible-test/ubuntu-20.4-ansible-test"
DEV_TEST_CONTAINER_ROLE_UBUNTU="${DEV_TEST_CONTAINER_ROLE_UBUNTU} ansible-test/ubuntu-21.4-ansible-test"
DEV_TEST_CONTAINER_ROLE_UBUNTU="${DEV_TEST_CONTAINER_ROLE_UBUNTU} ansible-test/ubuntu-22.4-ansible-test"
export DEV_TEST_CONTAINER_ROLE_UBUNTU
DEV_TEST_CONTAINER_ANSIBLE="${DEV_TEST_CONTAINER_ANSIBLE} ansible-test/ubuntu-22.4-ansible-test-2.11"
DEV_TEST_CONTAINER_ANSIBLE="${DEV_TEST_CONTAINER_ANSIBLE} ansible-test/ubuntu-22.4-ansible-test-2.12"
DEV_TEST_CONTAINER_ANSIBLE="${DEV_TEST_CONTAINER_ANSIBLE} ansible-test/ubuntu-22.4-ansible-test-2.13"
DEV_TEST_CONTAINER_ANSIBLE="${DEV_TEST_CONTAINER_ANSIBLE} ansible-test/ubuntu-22.4-ansible-test-2.14"
DEV_TEST_CONTAINER_ANSIBLE="${DEV_TEST_CONTAINER_ANSIBLE} ansible-test/ubuntu-22.4-ansible-test-2.15"
export DEV_TEST_CONTAINER_ANSIBLE
