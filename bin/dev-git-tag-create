#!/usr/bin/env bash
#######################################
# Dev / GIT / Create and push GIT tag
#
# * Works on the main branch
# * Version: 2.1.0
#
#######################################
# Copyright [2023] [serdigital64@gmail.com]
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

#
# Imports
#

# shellcheck source=bin/dev-set
source ./bin/dev-set || { echo 'dev-set:Error: unable to load dev environment' 2>&1 && exit 1; }
# shellcheck source-path=bin
source ./bin/dev-env-git || exit 1
# shellcheck source-path=lib/bl64
source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-fmt.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-fs.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-rxtx.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-txt.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-api.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-vcs.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-core.bash" || exit 1

#
# Functions
#

function dev_git_get_changes() {
  bl64_dbg_app_show_function "$@"
  local tag="$1"
  bl64_txt_run_awk -v tag="$tag" '
  BEGIN {
      section = 0
      pattern = "## \\[" tag "\\]"
  }
  /^$/ { next }
  section == 0 && $0 ~ pattern {
    section = 1
    next
  }
  section == 1 && (/^## \[[0-9]+\.[0-9]\.+[0-9]+\]$/ || /^\[[0-9]+\.[0-9]\.+[0-9]+\]: /) {
    exit
  }
  section == 1 {
    gsub(/#/,"*")
    print $0
    next
  }
  ' "$DEV_BASE_CHANGELOG"
}

function dev_git_tag_create() {
  bl64_dbg_app_show_function "$@"
  local new_tag="$1"
  local include_changelog="$2"
  local message=''
  local -i status=0

  bl64_msg_show_task "switch to main branch (${DEV_GIT_BRANCH_MAIN})"
  bl64_vcs_run_git checkout "$DEV_GIT_BRANCH_MAIN" ||
    return $?

  bl64_msg_show_task "create tag (${new_tag})"
  if bl64_lib_flag_is_enabled "$include_changelog"; then
    message="$(bl64_fs_create_tmpfile)" &&
      dev_git_get_changes "$new_tag" >"$message"
    [[ ! -s "$message" ]] && bl64_msg_show_error 'Unable to extract changelog for the requested tag' && status=1
    ((status == 0)) && git tag "$new_tag" --file "$message" || status=1
    bl64_fs_rm_tmpfile "$message"
    ((status != 0)) && return $status
  else
    bl64_vcs_run_git tag "$new_tag" ||
      return $?
  fi

  bl64_msg_show_task "push tag to origin (${DEV_GIT_REMOTE_ORIGIN})"
  bl64_vcs_run_git push "$DEV_GIT_REMOTE_ORIGIN" "$new_tag" ||
    return $?

  if bl64_lib_flag_is_enabled "$DEV_GIT_REMOTE_UPSTREAM_ENABLED"; then
    bl64_msg_show_task "push tag to upstream (${DEV_GIT_REMOTE_UPSTREAM})"
    bl64_vcs_run_git push "$DEV_GIT_REMOTE_UPSTREAM" "$new_tag"
  fi
}

function dev_git_initialize() {
  bl64_dbg_app_show_function "$@"
  local new_tag="$1"
  local include_changelog="$2"
  if bl64_lib_flag_is_enabled "$include_changelog"; then
    bl64_check_file "$(pwd)/${DEV_BASE_CHANGELOG}" ||
      return $?
  fi
  bl64_check_parameter 'new_tag' &&
    bl64_vcs_setup
}

#
# Main
#

declare dev_git_new_tag="${1:-}"
declare dev_git_include_changelog="${2:-$BL64_VAR_OFF}"

[[ -n "$DEV_CICD_DEBUG" ]] && bl64_dbg_all_enable

bl64_msg_all_enable_verbose
bl64_msg_show_batch_start 'dev-git-tag-create'
dev_git_initialize "$dev_git_new_tag" "$dev_git_include_changelog" &&
  dev_git_tag_create "$dev_git_new_tag" "$dev_git_include_changelog"
bl64_msg_show_batch_finish $? 'dev-git-tag-create'
