#!/usr/bin/env bash
#######################################
# Set development environment variables
#
# * Source this script from the project's root directory
# * Template Version: 7.0.0
#
#######################################
# Copyright [2023] [serdigital64@gmail.com]
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

#
# Globals
#

export DEV_SET_VERBOSE="${DEV_SET_VERBOSE:-verbose}"

#
# Functions
#

function dev_set_error() {
  local msg="$1"
  echo "dev-set:Error: ${msg}"
  return 0
}

function dev_set_message() {
  local msg="$1"
  [[ "$DEV_SET_VERBOSE" == 'verbose' ]] && echo "dev-set: ${msg}"
  return 0
}

function dev_set_load_local() {
  local dot_local='.local'
  local dot_secrets='.secrets'

  dev_set_message "Load local environment variables ($(pwd)/${dot_local})"
  # shellcheck source=SCRIPTDIR/../.local
  source "$dot_local" ||
    {
      dev_set_error "unable to source file (${dot_local})"
      return 1
    }
  dot_secrets="${DEV_ROOT}/${dot_secrets}"
  if [[ -f "$dot_secrets" ]]; then
    dev_set_message "Load local secrets (${dot_secrets})"
    # shellcheck source=SCRIPTDIR/../.secrets
    source "${dot_secrets}" ||
      {
        dev_set_error "unable to source file (${dot_secrets})"
        return 1
      }
  fi
}

function dev_set_load_gitlab() {
  dev_set_message "GitLab detected, setting project root (${CI_PROJECT_DIR})"
  # shellcheck disable=SC2155
  export DEV_ROOT="$CI_PROJECT_DIR"
}

function dev_set_load_github() {
  local dot_local='.local-github'

  dev_set_message "GitHub detected, setting project root (${GITHUB_WORKSPACE})"
  # shellcheck disable=SC2155
  export DEV_ROOT="$GITHUB_WORKSPACE"

  dot_local="${DEV_ROOT}/${dot_local}"
  if [[ -f "$dot_local" ]]; then
    dev_set_message "Load local github automatic environment variables (${dot_local})"
    # shellcheck source=SCRIPTDIR/../.local-github
    source "${dot_local}" ||
      {
        dev_set_error "unable to source file (${dot_local})"
        return 1
      }
  fi
}

function dev_set_load_testmansh() {
  dev_set_message "Testmansh container detected, setting project root (${TESTMANSH_PROJECT_ROOT})"
  export DEV_ROOT="$TESTMANSH_PROJECT_ROOT"
}

function dev_set_load_exported() {
  dev_set_message 'Read DEV_ROOT variable from exported shell environment'
}

function dev_set_check_root() {
  if [[ -z "$DEV_ROOT" ]]; then
    dev_set_error 'unable to identify current repository location. Check that the variable DEV_ROOT is correctly set' &&
      return 1
  fi
}

function dev_set_load_env() {
  local dot_env="${DEV_ROOT}/.env"
  dev_set_message "Load project environment variables (${dot_env})"
  # shellcheck source=SCRIPTDIR/../.env
  source "$dot_env" ||
    {
      dev_set_error "unable to read environment variables (${dot_env})"
      return 1
    }
}

#
# Main
#

# shellcheck disable=SC2154
if [[ -f ./.local ]]; then
  dev_set_load_local
elif [[ -n "$GITHUB_WORKSPACE" ]]; then
  dev_set_load_github
elif [[ -n "$GITLAB_CI" ]]; then
  dev_set_load_gitlab
elif [[ -n "$TESTMANSH_PROJECT_ROOT" ]]; then
  dev_set_load_testmansh
else
  dev_set_load_exported
fi

# shellcheck disable=SC2015
dev_set_check_root &&
  dev_set_load_env &&
  dev_set_message 'Dev environment variables loading completed OK' ||
  { dev_set_error 'Failed to load Dev environment variables'; return 1; }
