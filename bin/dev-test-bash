#!/usr/bin/env bash
#######################################
# Dev / Test / Bash / Simple test runner
#
# * Run tests in test/bash using containers
# * Version: 1.0.0
#
#######################################
# Copyright [2023] [serdigital64@gmail.com]
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

#
# Globals
#

# Dev / Test / Base / Flag for marking container environment
export _DEV_TEST_BASH_CONTAINER_ENVIRONMENT='OFF'

#
# Imports
#

# shellcheck source=bin/dev-set
source ./bin/dev-set || { echo 'dev-set:Error: unable to load dev environment' 2>&1 && exit 1; }
# shellcheck source-path=bin
source ./bin/dev-env-bash || exit 1
# shellcheck source-path=lib/bl64
source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-fmt.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-txt.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-fs.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-cnt.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-core.bash" || exit 1

#
# Functions
#

function dev_test_run() {
  bl64_dbg_app_show_function "$@"
  local container_path="$1"
  local test_file="$2"

  bl64_msg_show_phase "run test target: ${test_file}"
  # shellcheck disable=SC2086
  bl64_cnt_run \
    $BL64_CNT_SET_RM \
    $BL64_CNT_SET_TTY \
    --env=_DEV_TEST_BASH_CONTAINER_ENVIRONMENT='ON' \
    --workdir="$DEV_ENV_BASH_CONTAINER_PATH_ROOT" \
    --mount "type=bind,source=${DEV_PATH_SRC},target=${DEV_ENV_BASH_CONTAINER_PATH_SRC},readonly" \
    --mount "type=bind,source=${DEV_PATH_ROOT},target=${DEV_ENV_BASH_CONTAINER_PATH_ROOT},readonly" \
    --mount "type=bind,source=${DEV_PATH_TEST},target=${DEV_ENV_BASH_CONTAINER_PATH_TEST},readonly" \
    --entrypoint="${DEV_ENV_BASH_CONTAINER_PATH_ROOT}/${test_file}" \
    "${DEV_ENV_BASH_REGISTRY}/${container_path}" ||
    return $?
}

function dev_test_bash() {
  bl64_dbg_app_show_function "$@"
  local container="$1"
  shift
  local target="$*"
  local current=''
  local tests=''

  bl64_dbg_app_show_comments 'define target tests'
  if [[ -z "$target" ]]; then
    target="$DEV_TEST_BASH_CASES"
  fi
  if [[ -d "$target" ]]; then
    bl64_dbg_app_show_comments "look for tests (${target})"
    tests="$(bl64_fs_find_files "$target")" ||
      return $?
  else
    tests="$target"
  fi
  bl64_msg_show_info "test container: ${container}"
  for current in $tests; do
    dev_test_run "${container}" "$current" ||
      return $?
  done
}

function dev_test_initialize() {
  bl64_dbg_app_show_function
  bl64_cnt_setup
}

#
# Main
#

declare dev_test_container="${1:-${DEV_TEST_BASH_CONTAINER}}"
shift
declare dev_test_target="${*:-}"

[[ -n "$DEV_CICD_DEBUG" ]] && bl64_dbg_all_enable

bl64_msg_all_enable_verbose
bl64_msg_show_batch_start 'dev-test-bash'
dev_test_initialize &&
  dev_test_bash "$dev_test_container" "$dev_test_target"
bl64_msg_show_batch_finish $? 'dev-test-bash'
