#!/usr/bin/env bash
#
# Create / Update GIT sub-repositories
#
# * Use when GIT submodule is not possible or needed
# * Sub-repositories are regular GIT repositories created inside another one
# * Ensure the target path is also in .gitignore
# * Template Version: v1.0.0
#

#
# Imports
#

# shellcheck source=SCRIPTDIR/dev-set
source ./bin/dev-set || exit 1

# shellcheck source-path=SCRIPTDIR/../lib disable=SC2154
source "$DEV_CICD_BASHLIB64" || exit 1

#
# Main
#

declare repo=''

bl64_check_export 'DEV_ANSIBLE_COLLECTIONS' &&
  bl64_check_export 'DEV_SRC_COLLECTIONS' ||
  bl64_check_export 'DEV_REPO_UPSTREAM_COLLECTIONS' &&
  exit $?

bl64_msg_show_task 'Create Ansible namespace directory'
bl64_fs_create_dir "$BL64_VAR_DEFAULT" "$BL64_VAR_DEFAULT" "$BL64_VAR_DEFAULT" "$DEV_SRC_COLLECTIONS" &&
  cd "$DEV_SRC_COLLECTIONS" ||
  exit $?

bl64_msg_show_phase 'Clone/Update collection repositories'
for repo in $DEV_ANSIBLE_COLLECTIONS; do
  if [[ -d "$repo" ]]; then
    bl64_msg_show_task "Update collection (${repo})"
    cd "$repo" &&
      bl64_vcs_run_git checkout main &&
      bl64_vcs_run_git pull upstream main &&
      cd .. ||
      exit $?
  else
    bl64_msg_show_task "Clone collection (${repo})"
    bl64_vcs_run_git clone "${DEV_REPO_UPSTREAM_COLLECTIONS}/${repo}" ||
      exit $?
  fi
done
